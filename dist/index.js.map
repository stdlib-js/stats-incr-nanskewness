{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar incrskewness = require( '@stdlib/stats-incr-skewness' );\n\n\n// MAIN //\n\n/**\n* Returns an accumulator function which incrementally computes a corrected sample skewness, ignoring `NaN` values.\n*\n* @returns {Function} accumulator function\n*\n* @example\n* var accumulator = incrnanskewness();\n*\n* var skewness = accumulator();\n* // returns null\n*\n* skewness = accumulator( 2.0 );\n* // returns null\n*\n* skewness = accumulator( -5.0 );\n* // returns null\n*\n* skewness = accumulator( -10.0 );\n* // returns ~0.492\n*\n* skewness = accumulator( NaN );\n* // returns ~0.492\n*\n* skewness = accumulator();\n* // returns ~0.492\n*/\nfunction incrnanskewness() {\n\tvar skewness = incrskewness();\n\treturn accumulator;\n\n\t/**\n\t* If provided a value, the accumulator function returns an updated corrected sample skewness. If not provided a value, the accumulator function returns the current corrected sample skewness.\n\t*\n\t* @private\n\t* @param {number} [x] - new value\n\t* @returns {(number|null)} corrected sample skewness or null\n\t*/\n\tfunction accumulator( x ) {\n\t\tif ( arguments.length === 0 || isnan( x ) ) {\n\t\t\treturn skewness();\n\t\t}\n\t\treturn skewness( x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = incrnanskewness;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute a corrected sample skewness incrementally, ignoring `NaN` values.\n*\n* @module @stdlib/stats-incr-nanskewness\n*\n* @example\n* var incrnanskewness = require( '@stdlib/stats-incr-nanskewness' );\n*\n* var accumulator = incrnanskewness();\n*\n* var skewness = accumulator();\n* // returns null\n*\n* skewness = accumulator( 2.0 );\n* // returns null\n*\n* skewness = accumulator( -5.0 );\n* // returns null\n*\n* skewness = accumulator( -10.0 );\n* // returns ~0.492\n*\n* skewness = accumulator( NaN );\n* // returns ~0.492\n*\n* skewness = accumulator();\n* // returns ~0.492\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAe,QAAS,6BAA8B,EA+B1D,SAASC,GAAkB,CAC1B,IAAIC,EAAWF,EAAa,EAC5B,OAAOG,EASP,SAASA,EAAaC,EAAI,CACzB,OAAK,UAAU,SAAW,GAAKL,EAAOK,CAAE,EAChCF,EAAS,EAEVA,EAAUE,CAAE,CACpB,CACD,CAKAN,EAAO,QAAUG,ICzBjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "incrskewness", "incrnanskewness", "skewness", "accumulator", "x", "main"]
}
